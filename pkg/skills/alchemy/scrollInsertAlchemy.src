/* $Id$
 *
 */
use uo;
use os;


program on_insert(who, book, movetype, inserttype, item, existing_stack, amt);

	amt            := amt;
	existing_stack := existing_stack;
	movetype       := movetype;
	inserttype     := inserttype;
//SendSysmessage(who,"oi");
	if( book.movable == 0 )
		SendSysMessage(who, "Cancelado.");
		MoveItemToContainer(item, who.backpack);
		return 0;
	elseif( !ReserveItem(book) || !ReserveItem(item) )
		MoveItemToContainer(item, who.backpack);
		SendSysMessage(who, "O livro esta em uso.");
		return 0;
	elseif( item.objtype != 0xef1f)
		SendSysMessage(who, "Voce nao pode colocar isto no livro.");
		MoveITemToContainer(item, who.backpack);
		return 0;
	else
		if( GetObjProperty(item, "spellinfo") )
			return addScroll(who, book, item);
		else
			SendSysMessage(who, "Voce nao pode por isto no livro.");
			MoveItemToContainer(item, who.backpack);
			return 0;
		endif
	endif

	return 1;
endprogram


function addScroll(who, book, rune)
	var rune_list := GetObjProperty(book, "recipes");
	if (rune_list == error)
		rune_list := array;
	endif
	var newSpell := GetObjProperty(rune, "spellinfo");
	foreach spell in rune_list
		if (newspell.id == spell.id)
			SendSysMessage(who, "Este livro ja contem esta receita.");
			MoveItemTocontainer(rune, who.backpack);
			return 0;
		endif
	endforeach
	//sendsysmessage(who, "oi2");
	if( rune_list.Size() > 15 )
		SendSysMessage(who,"Este livro ja esta cheio.");
		MoveItemToContainer(rune, who.backpack);
		return 0;
	endif
	if( !ReserveItem(rune) )
		SendSysMessage(who,"Cancelado");
		MoveItemToContainer(rune, who.backpack);
		return 0;
	endif



	Set_Critical(1);

	rune_list.Append(GetObjProperty(rune, "spellinfo"));

	SetObjProperty(book, "recipes", rune_list);

	ReleaseItem(rune);
	var e := DestroyItem(rune);
	Set_Critical(0);

	SendSysMessage(who, "Voce adicionou o pergaminho no livro. ");


	return 1;
endfunction
