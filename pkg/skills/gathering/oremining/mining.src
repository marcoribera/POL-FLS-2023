
use uo;
use cfgfile;
use os;

include "include/client";
include ":datafile:datafile";
include ":attributes:attributeConstants";
include ":attributes:attributes";
include ":attributes:skillCheck";
include ":crafting:toolWear";
include ":gathering:mining";
include "include/say";
include ":charactercreation:habilidades";

const MINING_ANIMATION	:= 0xB;
const MINING_SOUND	:= 0x126;


program OreMining(who, tool)

	if ( GetEquipmentByLayer(who, LAYER_MOUNT) )
		SendSysMessage(who, "Voce nao pode minerar montado.");
		return;
	endif
	SendSysMessageEx(who, "Onde voce deseja minerar?", SSM_REQUEST);
	var targ := TargetCoordinates(who);
	

	if ( CoordinateDistance(who.x, who.y, targ.x, targ.y) > 2 )
		SendSysMessage(who, "Muito longe.");
		return;
	elseif ( !CanMine(targ, "Stone") )
		var maps := GetMapsInBackpack(who);
		//sendsysmessage(who, " " + maps);
		if (maps.size() > 0)
			var map := maps[1];
			if (maps.size() > 1)
				SendSysMessageEx(who, "Escolha o mapa que quer procurar.", SSM_REQUEST);
				map := target(who);
				if (!(isTreasureMap(map)))
					return;
				endif
			endif
			DigForMap(who, targ, map);
			return;
		else
			SendSysMessageEx(who, "Voce nao pode minerar aqui.", SSM_FAIL);
			return;
		endif
	
	endif

//	sendsysmessage(who, CanMine(targ, "Stone") + " " );

	var my_x := who.x;
	var my_y := who.y;
	var my_facing := who.facing;


	if (!CheckLoop(who, tool, my_x, my_y, my_facing))
		SendsysMessage(who, "Voce parou de minerar.");
		return;
	endif

	while(MiningLoop(who, tool, my_x, my_y, targ.x, targ.y, my_facing))
		CheckToolWear(who, tool, GATHERING);
		if (!CheckLoop(who, tool, my_x, my_y, my_facing))
			break;
		elseif (AP_GetVital(who, "Stamina") < 5)
			SendSysMessage(who, "Voce esta muito cansado para minerar.");
			break;
		endif
		AP_ConsumeVital(who, "Stamina", 5);
		sleep(3);
	endwhile
	
	SendSysMessage(who, "Voce parou de minerar.");
	
endprogram

function MiningLoop(who, tool, my_x, my_y, targx, targy, my_facing)
	var i;
	for ( i:=0; i<3; i:=i+1 )
		if ( !CheckLoop(who, tool, my_x, my_y, my_facing) )
			return 0;
		endif
		PerformAction(who, MINING_ANIMATION);
		PlaySoundEffect(who, MINING_SOUND);
		sleep(1);
	endfor

	var miningregion := GetMiningRegion(targx, targy); //feita
	var ore_type := DetermineOreType(who, miningregion); //feit
	
	var ore_amount := GetOreAmount(who.realm, targx, targy ); //feita
	var difficulty := DetermineMiningDifficulty(ore_type); // feita

	if (who.cmdlevel > 2)
		SendSysMessage(who, "ore " + ore_type);
		SendSysMessage(who, "region " + miningregion);
		SendSysMessage(who, "amount " + ore_amount);
		SendSysMessage(who, "difficulty " + difficulty);
	endif

	if (!ore_type)
		return 0;
/*	elseif (ore_type == 20481) // Se for pedra
		if ( SkillCheck(who, GATHERING, difficulty) > 0 )
			var minerio := CreateItemInBackPack(who, ore_type, 1);
			minerio.movable := 1;
			SendSysMessage(who, "Voce pegou alguns minerios. " );
		else
			SendSysMessage(who, "Voce falhou em pegar minerios.");
		endif
		return 1;*/
	endif

	if ( ore_amount > 0 )
		if (ore_type != 999) //999 eh quando nao passou na chance de raridade do minerio
		
			if ( SkillCheck(who, GATHERING, difficulty) > 0 )
				var amt := Cint(AP_GetSkill(who, GATHERING)/20);
				if (amt <= 0)
					amt := 1;
				endif
				ore_amount := ore_amount - amt;
				if (ore_amount < 0)
					ore_amount := 0;
				endif
				SetOreAmount(who.realm, targx, targy, ore_amount); //feita
				var minerio := CreateItemInBackPack(who, ore_type, amt);
				minerio.movable := 1;
				SendSysMessage(who, "Voce pegou alguns minerios. " );
				if (TemHabilidade(who, "Garimpeiro"))
					Garimpeiro(who);
				endif
			else
				SendSysMessage(who, "Voce falhou em pegar minerios.");
			endif
		endif
	else
		SendSysMessage(who, "Parece nao ter mais minerios aqui.");
		return 0;
	endif


	return 1;
endfunction
