use uo;
use os;
use npc;
use util;
use storage;


/*
 * POR FAZER
 * comandos:
 * - procure ajuda
 * - encontre caminho
 * - ca√ßar
 * - fingir de morto
 * - procurar item
 * - posicoes de batalha
 * - odiar inimigos
 * - friend
 * - voar
 * - group
 * - patrol (guard entre.. )
 */


include ":attributes:attributes";
include "include/sysEvent";
include ":mounts:mounts";
include "include/client";
include ":gumps:yesNo";
include "include/npcUtil";
include "include/commonFunctions";
include "include/npcSettings";
include "include/say";
//include "include/dungeons";
include ":gumps:gumps";
include ":timedScripts:timedScripts";


set_script_option(SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES, 1);

CONST UOBJ_BANKBOX      := 0x0e40;

var pack_animals := array(291, 292);
var mount := 0;

var me := self();
var wait_time := 120;

var mypack := FindMyPack(me.serial);


var next_watch := ReadGameClock();
var guarding := 0;

var last_following := 0;
var following :=0;

var going_to;
var going_loc := 0;

var lastdistance;
var stuck := 0;

var blocked;
var dragging;
var drag_loc := struct;
    drag_loc.+x;
    drag_loc.+y;
    drag_loc.+z;
    drag_loc.+oldx;
    drag_loc.+oldy;
    drag_loc.+oldz;

var running_from := 0;
//var theway := 0;

var fighting := 0;
var opponent := 0;
var flee_level := GetMyFleeLevel();

//Owner info
var owner_serial;
var owner;

//Custom events
const FOLLOW_CMD	:= 0xA001;
const ATTACK_CMD	:= 0xA002;
const NEW_MASTER_CMD	:= 0xA003;
const GUARD_CMD		:= 0xA004;
const RUN_FORREST_CMD	:= 0xA005;
const FETCH_CMD		:= 0xA006;
const GO_OBJ_CMD	:= 0xA007;
const GO_LOC_CMD	:= 0xA008;
const DRAG_CMD		:= 0xA009;
const STOP_CMD		:= 0xA010;
const DELIVER_CMD	:= 0xA011;
const DROP_CMD		:= 0xA012;


program TamedAI()

	Detach();
	EnableMainEvents();
	Setup();

	sleep(1);
	while ( me )
		if ( wait_time < 1 )
			sleepms(10);
		endif

		var ev := Wait_For_Event(wait_time);
		case ( ev.type )
			SYSEVENT_SPEECH:
				ProcessSpeech(ev);
			SYSEVENT_ENGAGED:
				if( ev.source != owner )
					opponent := ev.source;
				endif
			SYSEVENT_DAMAGED:
				if ( (ev.source).IsA(POLCLASS_MOBILE) )
					opponent := ev.source;
				endif
			SYSEVENT_DOUBLECLICKED:
					if( (Distance(ev.source, me) > 1) )
						if (ev.source == owner)
							ProcessDoubleClick(ev);
						endif
					else
						if ( me.graphic in pack_animals )
							OpenPack(ev);
						elseif ( !GetEquipmentByLayer(ev.source, LAYER_MOUNT) )
							if ( (mount == 1) )
								//if( !InDungeon(ev.source) ) algumas montarias podem ser montadas em dungeons como besouros
									ev.source.hidden := 0;
									MP_Mount(ev.source, me);
									me.hidden := 0;
								//endif
							endif
						endif
					endif
			SYSEVENT_ITEM_GIVEN:
				if (ev.source == owner)
					TakeItem(ev);
				endif
			//SYSEVENT_ENTEREDAREA:

			FOLLOW_CMD:
				following := ev.targ;
			ATTACK_CMD:
				opponent := ev.targ;
			GUARD_CMD:
				guarding := ev.targ;
			FETCH_CMD:
			GO_OBJ_CMD:
				going_to := ev.targ;
			GO_LOC_CMD:
				going_loc := struct;
				going_loc.+x := ev.targ.x;
				going_loc.+y := ev.targ.y;
				going_loc.+type := ev.targ.type;
			DRAG_CMD:
				going_to := ev.targ;
				drag_loc.x := ev.x;
				drag_loc.y := ev.y;
				drag_loc.z := ev.z;
			DROP_CMD:
				Drop();
			DELIVER_CMD:
				Deliver(ev.source);
			STOP_CMD:
				//SendSysMessage(ev.source, "parei");
				opponent := 0;
				fighting := 0;
				guarding := 0;
				following := 0;
				going_to := 0;
				going_loc := 0;
				dragging := 0;
				running_from := 0;
				//Stop();
			NEW_MASTER_CMD:
				Transfer(ev.targ);
			RUN_FORREST_CMD:
				if(ev.targ != 0)
					running_from := ev.targ;
				endif
				RunForrestRun();
		endcase
		if ( CInt(GetObjProperty(me, "happiness")) < 10 )
			SetObjProperty(me, "happiness", 100);
		elseif ( running_from )
			fugindo();
		elseif ( opponent )
			if ( AP_GetVital(me, "Hits") > flee_level )
				Fight();
				Follow();
			else
				running_from := opponent;
			endif
			if ( IsDead(opponent) || Distance(opponent, me) > 20 )
				following := last_following;
				fighting := 0;
				opponent := 0;
				last_following := 0;
				SetWarMode(0);
				if(dragging)
					going_to := dragging;
					dragging := 0;
				endif
			endif
		elseif ( dragging )
			dragTo();
		elseif ( going_loc )
			goToLoc();
		elseif ( going_to )
			goToObj();
		elseif ( guarding )
			Guard();
			if( following )
				Follow();
			endif
		elseif ( following )
			Follow();
		else
			wait_time := 120;
		endif
		//debuggg();
	endwhile
endprogram

/////////////////////////////////
/////// FUNCOES GERAIS //////////
/////////////////////////////////


function ProcessSpeech(ev)

	var text := lower(ev.text);
	var name := lower(me.name);
	if	( ( (ev.source).serial != (me.master).serial ) &&
		( ev.source.serial != GetObjProperty(me, "AntigoTreinadorID") ) &&
		( ev.source.serail != GetObjProperty(me, "friend") ) &&
		( !ev.source.cmdlevel ) );
		//Say("Querido "+ev.source.name+", fique calado. Eu so ouco o meu dono.");
		return;
	endif

	if( !text[name] && !text[GetObjProperty(me, "Group")] && !text[GetObjProperty(me, "All")] )
		return;
	endif

	var cmd := IsItACommand(text);


	var group := GetObjProperty(me, "Group");
	var all := GetObjProperty(me, "All");

	if( !cmd )
		return;
	endif

	if(ev.source.serial == owner.serial)
		if( GetObjProperty(me, "friend") )
			EraseObjProperty(me, "friend");
		endif
	endif

	if( cmd == "attack" )
		var targ := Target(me.master, TGTOPT_CHECK_LOS);
		if ( targ == me || targ == ev.source || !targ.IsA(POLCLASS_MOBILE) )
			return;
		endif

		if ( text[all] )
			AllCommand(ATTACK_CMD, targ);
		elseif ( text[group] )
			GroupCommand(ATTACK_CMD, targ);
		else
			opponent := targ;
		endif
	elseif ( cmd == "guard" )
		if ( !text[name] )
			if ( text["-me"] )
				guarding := ev.source;
			else
				var targ := target(me.master);
				if ( !targ.IsA(POLCLASS_MOBILE) )
					return;
				endif

				if ( text[all] )
					AllCommand(GUARD_CMD, targ);
				elseif ( text[group] )
					GroupCommand(GUARD_CMD, targ);
				endif
			endif
		elseif( text["-me"] )
			guarding := ev.source;
		else
			var targ := target(me.master);
			if ( targ == me )
				return;
			elseif ( targ.IsA(POLCLASS_MOBILE) )
				guarding := targ;
			endif
		endif
	elseif ( cmd == "stop" )
		Stop();

	elseif ( cmd == "follow" )
		if ( !text[name] )
			if ( text["-me"] )
				following := ev.source;
			else
				var targ := target(me.master);
				if ( !targ.IsA(POLCLASS_MOBILE) )
					return;
				endif

				if ( text[all] )
					AllCommand(FOLLOW_CMD, targ);
				elseif ( text[group] )
					GroupCommand(FOLLOW_CMD, targ);
				endif
			endif
		elseif ( text["-me"] )
			following := ev.source;
		else
			following := target(me.master);
		endif
	elseif ( cmd == "transfer" )
		var targ := target(ev.source);
		if ( !targ.acctname )
			return;
		elseif ( text[all] )
			AllCommand(NEW_MASTER_CMD, targ);
		elseif ( text[group] )
			GroupCommand(NEW_MASTER_CMD, targ);
		else
			Transfer(targ);
		endif
	elseif( cmd == "release" )
		UnTame();
	elseif( cmd == "fetch" )
		Fetch();
	elseif( cmd == "drop" )
		drop();
	elseif( cmd == "runto" )
		go("run", text[group], text[all]);
	elseif( cmd == "walkto" )
		go("walk", text[group], text[all]);

	elseif( cmd == "deliver" )
		Deliver(ev.source);
	elseif( cmd == "drag" )
		Drag1(ev.source);
	elseif( cmd == "flee" )
		if( text[all] )
			AllCommand(RUN_FORREST_CMD, 0);
		elseif( text[group] )
			GroupCommand(RUN_FORREST_CMD, 0);
		else
			RunForrestRun();
		endif
	elseif( cmd == "friend" )
		if ( ev.source.serial == owner.serial )
			var targ := Target(owner);
			if ( (targ.acct) && (CheckLineOfSight(owner, targ)) )
				SetObjProperty(me, "friend", targ.serial);
			else
				SendSysMessage(owner, "Alvo invalido.");
				return 0;
			endif
		endif
	endif
endfunction

function ProcessDoubleClick(ev)

	var targ := TargetCoordinates(owner);
	if (targ)
		if (targ.mobile == me)
			if ( me.graphic in pack_animals )
				if ((EnumerateItemsInContainer(me.backpack)).size() > 0)
					SendSysMessage(ev.source, "Voce precisa esvaziar a mochila antes de remove-la.");
					return;
				endif
				PrintText(ev.source, "*remove a mochila de "+me.name+"*");
				me.graphic := GetObjProperty(me, "beforepack");
				CreateItemInBackpack(ev.source, "backpack");
				EraseObjProperty(me, "beforepack");

				if(IsMountable(me.graphic))
					mount := 1;
				else
					mount := 0;
				endif
			endif
		elseif (targ.mobile)
			var gump := GFCreateGump(220, 70);
			//GFGumpPic(gump, 0, 0, 0x254E);
			GFResizePic(gump, 0, 0, 0x254E, 100, 100);
			GFTextLine(gump, 30, 15, 2100, "Guarda ");
			GFTextLine(gump, 30, 35, 2100, "Segue ");
			if (targ.mobile.serial != owner.serial)
				GFTextLine(gump, 30, 55, 2100, "Ataca ");
			endif
			GFAddButton(gump, 15, 17, 2117, 2118, 1, 10);
			GFAddButton(gump, 15, 37, 2117, 2118, 1, 20);
			if (targ.mobile.serial != owner.serial)
				GFAddButton(gump, 15, 57, 2117, 2118, 1, 30);
			endif
			var input := GFSendGump(owner, gump);
			input  := input[0];
			if (input == 10)
				guarding := struct;
				guarding := targ.mobile;
			elseif (input ==  20)
				following := struct;
				following := targ.mobile;
			elseif (input == 30)
				opponent := targ.mobile;
			endif

		elseif (!Cint(targ.mobile))//se nao for nem item nem mobile anda ate la
			if (!Cint(targ.item))
				going_loc := struct;
				going_loc.+x := targ.x;
				going_loc.+y := targ.y;
				going_loc.+type := "run";
			endif
		endif
	endif

endfunction

function Setup()
	owner_serial := GetObjProperty(me, "owner");
	owner := SystemFindObjectBySerial(owner_serial, SYSFIND_SEARCH_OFFLINE_MOBILES);
	if ( !owner )
		UnTame();
	elseif ( (me.master).serial != owner )
		me.SetMaster(owner);
	endif

	var happiness := GetObjProperty(me, "happiness");
	if ( !happiness || happiness == error )
		happiness := 100;
		SetObjProperty(me, "happiness", happiness);
	endif

	if ( !me.backpack )
		var new_pack := CreateItemAtLocation(me.x, me.y, me.z, "backpack", 1);
		EquipItem(me, new_pack);
	endif

	me.facing := me.facing+1;
	TurnToward(me.master);

	if ( !GetProcess(GetObjProperty(me, "#happypid")) )
		start_script(":taming:happycounter", {me, ReadGameClock()});
	endif

	if(IsMountable(me.graphic))
		mount := 1;
	else
		mount := 0;
	endif

	SetWarMode(0);
endfunction

function EnableMainEvents()
	EnableEvents(SYSEVENT_SPEECH, 10);
	EnableEvents(SYSEVENT_ENGAGED);
	EnableEvents(SYSEVENT_DAMAGED);
	EnableEvents(SYSEVENT_DOUBLECLICKED, 5);
	EnableEvents(SYSEVENT_ITEM_GIVEN, 5);
endfunction

function DisableMainEvents()
	DisableEvents(SYSEVENT_SPEECH);
	DisableEvents(SYSEVENT_ENGAGED);
	DisableEvents(SYSEVENT_DAMAGED);
	DisableEvents(SYSEVENT_ITEM_GIVEN);
endfunction

function OpenPack(ev)
	if ( Distance(me, ev.source) > 2 )
		return;
	else
		SendOpenSpecialContainer(ev.source, me.backpack);
	endif
endfunction

function OpenTamedStorageAreas()
  var bank := FindStorageArea("Tamed Storage");
  if(!bank)
    bank := CreateStorageArea("Tamed Storage");
  endif
  return bank;
endfunction

function FindMyPack(myserial)
  var mybank := OpenTamedStorageAreas();
  var bank_obj_name := "Bankbox  " + Hex(myserial);
  var bankbox := FindRootItemInStorageArea(mybank, bank_obj_name);
  if(!bankbox)
     bankbox := CreateRootItemInStorageArea(mybank, bank_obj_name, UOBJ_BANKBOX);
  endif
  return bankbox;
endfunction

function DungeonTestOK(who)
	if( GetEquipmentByLayer(who, LAYER_MOUNT).graphic == BEETLE_MOUNTPIECE_GRAPHIC )
		return 1;
	elseif ( !InDungeon(who) )
		return 1;
	else
		SendSysMessage(who, "Voce nao pode montar neste animal dentro da caverna.");
		return 0;
	endif

endfunction

function IsItACommand(speech)
	var meus_comandos := GetObjProperty(me, "cmds");
	var cmd_keys := meus_comandos.Keys();
	foreach thing in cmd_keys
		var cmd := meus_comandos[thing];
		if( speech[cmd.singular] || speech[cmd.plural] )
			return lower(thing);
		endif
	endforeach

	return 0;
endfunction




/////////////////////////////////
//////////  COMBATE  ////////////
/////////////////////////////////



function Fight()
	if ( !fighting )
		if(!dragging)
			last_following := following;
		endif
		following := opponent;

		TurnToward(opponent);
		SetOpponent(opponent);

		fighting := 1;
	endif
endfunction

function IsDead(opponent)
	if ( !opponent )
		return 1;
	elseif ( !opponent.dead )
		return 0;
	elseif ( opponent.npctemplate )
		return 0;
	else
		return 1;
	endif
endfunction

function GetMyFleeLevel()
	var settings := NPC_LoadTemplateSettings(me);
	var fleelevel := NPC_GetFleeLevel(me, settings["FleeLevel"]);

	return fleelevel;
endfunction



/////////////////////////////////
//////// MOVIMENTACAO ///////////
/////////////////////////////////



function Follow()
	var dist := Distance(me, following);
	if ( opponent )
		if ( dist > 1 )
			var ma := 200 - me.run_speed;
			me.run_speed := me.run_speed + ma;
			RunToward(following);
			me.run_speed := me.run_speed - ma;
			wait_time := 0;
		else
			wait_time := 1;
		endif
	elseif( dist <= 2 )
		wait_time := 1;
	elseif( dist > 25 )
		following := 0;
		wait_time := 120;
	elseif ( dist > 6 )
		var ma := 200 - me.run_speed;
		me.run_speed := me.run_speed + ma;
		RunToward(following);
		me.run_speed := me.run_speed - ma;
		wait_time := 0;
	else
		var ma := 200 - me.run_speed;
		me.run_speed := me.run_speed + ma;
		WalkToward(following);
		me.run_speed := me.run_speed - ma;
		wait_time := 0;
	endif
endfunction

function goToObj()
	var dist := Distance(me, going_to);

	if( dist <= 1 )
		if( going_to.isa(POLCLASS_CORPSE) )
			Drag2(going_to);
			if(blocked)
				dragging.movable := 1;
				MoveObjectToLocation(dragging, me.x, me.y, me.z);
				dragging.movable := 0;
				blocked := 0;
			endif
		elseif( going_to.isa(POLCLASS_ITEM) )
			catchItem(going_to);
		else
			var myitems := EnumerateItemsInContainer(mypack);
			DeliverItem(myitems[RandomInt(len(myitems)) + 1], going_to);
		endif

		wait_time := 1;
		going_to := 0;
	elseif ( (dist > 6) || (opponent) )
		var ma := 200 - me.run_speed;
		me.run_speed := me.run_speed + ma;
		RunToward(going_to);
		me.run_speed := me.run_speed - ma;
		wait_time := 0;
	else
		var ma := 200 - me.run_speed;
		me.run_speed := me.run_speed + ma;
		WalkToward(going_to);
		me.run_speed := me.run_speed - ma;
		wait_time := 0;
	endif

	HandleStuck(dist, going_to);
endfunction

function goToLoc()
	var dist :=CoordinateDistance(me.x, me.y, going_loc.x, going_loc.y);

	if( dist <= 1 )
		wait_time := 1;
		going_loc := 0;
		stuck := 0;
		lastdistance := 0;
		return;
	elseif( (going_loc.type == "run") || opponent )
		var ma := 200 - me.run_speed;
		me.run_speed := me.run_speed + ma;
		RunTowardLocation(going_loc.x, going_loc.y);
		me.run_speed := me.run_speed - ma;
		wait_time := 0;
	else
		var ma := 200 - me.run_speed;
		me.run_speed := me.run_speed + ma;
		WalkTowardLocation(going_loc.x, going_loc.y);
		me.run_speed := me.run_speed - ma;
		wait_time := 0;
	endif

	HandleStuck(dist, going_loc);
endfunction

function dragTo()
	var dist :=CoordinateDistance(me.x, me.y, drag_loc.x, drag_loc.y);

	if( opponent )
		going_to := dragging;
		dragging := 0;
		wait_time := 0;
	elseif( (dist <= 1) || !drag_loc )
		wait_time := 1;
		dragging := 0;
		drag_loc := 0;
		if(last_following)
			following := last_following;
			last_following := 0;
		endif
	elseif( (Distance(me, dragging) > 1) && !opponent )
		going_to := dragging;
		dragging := 0;
		blocked := 1;
	else
		var ma := me.run_speed;
		me.run_speed := 50;
		WalkTowardLocation(drag_loc.x, drag_loc.y);
		me.run_speed := ma;
		AP_ConsumeVital(me, STAMINA, 2);
		wait_time := 0;

		dragging.movable := 1;
		MoveObjectToLocation(dragging, dragging.x + (me.x - drag_loc.oldx), dragging.y + (me.y - drag_loc.oldy), dragging.z + (me.z - drag_loc.oldz));
		dragging.movable := 0;
		drag_loc.oldx := me.x;
		drag_loc.oldy := me.y;
		drag_loc.oldz := me.z;

		if( (RandomInt(3) == 1) && guarding )
			Guard();
			wait_time := 0;
		endif

		if(RandomInt(8) == 1)
			PrintTextAbove(me, "*arrastando corpo de " + dragging.desc[13, len(dragging.desc) - 12] + "*");
		endif
	endif

	HandleStuck(dist, drag_loc);
endfunction

function fugindo()
	var dist := Distance(me, running_from);

	if( dist > 20)
		running_from := 0;
		wait_time := 120;
	elseif ( dist > 15 )
		WalkAwayFrom(running_from);
		wait_time := 0;
	else
		RunAwayFrom(running_from);
		wait_time := 0;
	endif
endfunction

function HandleStuck(dist, byref going_where)
	if ( !lastdistance )
		lastdistance := dist;
	elseif( lastdistance <= dist )
		stuck += 1;
	else
		if(stuck > 0 )
			stuck := 0;
		endif
		lastdistance := dist;
	endif
	if( stuck == 5 )
		going_where := 0;
		wait_time := 1;
		stuck := 0;
		lastdistance := 0;
	endif
endfunction



/////////////////////////////////
/////// COMANDOS DE VOZ /////////
/////////////////////////////////


function Guard()
	wait_time := 3;

	if ( !guarding.IsA(POLCLASS_MOBILE) )
		guarding := 0;
	elseif ( Distance(me, guarding) > 15 )
		guarding := 0;
	elseif ( next_watch < ReadGameClock() )
		next_watch := ReadGameClock()+3;
		if ( RandomInt(100) < 5 )
			Say("*protegendo "+guarding.name+"*");
		endif

		foreach mob in ListHostiles(guarding, 9, LH_FLAG_LOS);
			opponent := mob;
			return;
		endforeach
	endif
endfunction



function Fetch()

	if ( len(EnumerateItemsInContainer(mypack)) )
		drop();
	endif

	var tobj := Target(owner);
	if (!tobj.isa(POLCLASS_ITEM))
		return;
	endif

	going_to := tobj;
endfunction

function catchItem(tobj)
	if (Accessible(me,tobj))
		if( !tobj.movable )
			PrintTextAbove(me, "*parece estar preso*");
			return;
		endif
		if( tobj.weight <= CInt(AP_GetStat(me, STRENGTH)/13) )
			if( tobj.amount == 1 )
				MoveItemToContainer(tobj, mypack);
			else
				PrintTextAbove(me, "*muitas coisas de uma vez*");
			endif
		else
			PrintTextAbove(me, "*muito pesado para pegar*");
		endif
	endif
endfunction

function drop()

	foreach myitems in EnumerateItemsInContainer(mypack)
		if (myitems.container.serial == mypack.serial)
			MoveObjectToLocation(myitems, me.x, me.y, me.z, me.realm, 0);
			sleepms(100);
		endif
	endforeach

endfunction



function Go(forma, grupo, todos)

	SendSysMessage(owner, "Escolha para onde ir.");
	var tloc := TargetCoordinates(owner);
	if (!tloc)
		return;
	endif

	var data := struct;
	data.+x := tloc.x;
	data.+y := tloc.y;
	data.+type := forma;



	if( todos )
		AllCommand(GO_LOC_CMD, data);
	elseif( grupo )
		GroupCommand(GO_LOC_CMD, data);
	else
		going_loc := data;
	endif

endfunction


function Stop()
	opponent := 0;
	fighting := 0;
	guarding := 0;
	following := 0;
	going_to := 0;
	going_loc := 0;
	dragging := 0;
	running_from := 0;
endfunction


function Deliver(source)

	var tobj;
	var myitems := EnumerateItemsInContainer(mypack);
	if ( len(myitems) > 0 )
		tobj := myitems[RandomInt(len(myitems)) + 1];
	else
		SendSysMessage(source, "Escolha o que voce deseja entregar.");
		tobj := Target(source);
		if (Distance(source, me) > 1)
			SendSysMessage(source, "Voce esta muito longe do seu animal.");
			return;
		endif
		if (tobj.container != source.backpack)
			SendSysMessage(source, "O item deve estar dentro da sua mochila.");
			return;
		endif
	endif

	if( tobj.weight <= CInt(AP_GetStat(me, STRENGTH)/13) )
		if( tobj.amount > 1 )
			PrintTextAbove(me, "*muitas coisas de uma vez*");
			return;
		endif
	else
		PrintTextAbove(me, "*muito pesado para pegar*");
		return;
	endif

	SendSysMessage(source, "E agora, para quem voce vai entregar.");
	var twho := Target(source);
	if(!twho.acct)
		return;
	endif

	going_to := twho;

endfunction

function DeliverItem(tobj, twho)
	PrintTextAbove(me, "*estende " + tobj.desc + " apontando para " + twho.name + "*");
	var trade := YesNo(twho, me.name + " est√° te oferecendo " + tobj.desc + ". Aceita?", "Sim, muito obrigado.", "N√£o, eu n√£o aceito!");
	if(trade)
		MoveItemToContainer(tobj, twho.backpack);
		PrintTextAbove(twho, "*pega " + tobj.desc + " e coloca na bolsa*");
	else
		PrintTextAbove(twho, "*nao aceita*");
	endif
endfunction



function Drag1(source)

	if ( len(EnumerateItemsInContainer(mypack)) )
		drop();
	endif

	SendSysMessage(source, "Escolha quem voce quer que seu animal arraste.");
	var tobj := Target(source);
	if (!tobj.isa(POLCLASS_CORPSE))
		return;
	endif

	SendSysMessage(source, "Aponte para onde voce quer que seu animal arraste o corpo.");
	var tloc := TargetCoordinates(source);
	if (!tloc)
		return;
	endif

	going_to := tobj;

	drag_loc := struct;
	drag_loc.x := tloc.x;
	drag_loc.y := tloc.y;
	drag_loc.z := tloc.z;

endfunction

function Drag2(tobj)

	if (Accessible(me,tobj))
		//if( tobj.weight > CInt(AP_GetStat(me, STRENGTH)) )
		if( CInt(AP_GetStat(me, STRENGTH)) < 60 )
			PrintTextAbove(me, "*muito pesado para pegar*");
			drag_loc := 0;
			return;
		endif
	else
		return;
	endif


	dragging := tobj;
	drag_loc.oldx := me.x;
	drag_loc.oldy := me.y;
	drag_loc.oldz := me.z;

	going_to := 0;
	last_following := following;
	following := 0;


endfunction


function RunForrestRun()
	if(opponent)
		running_from := opponent;
	endif

	opponent := 0;
	fighting := 0;
	guarding := 0;
	last_following := 0;
	following := 0;
	going_to := 0;
	going_loc := 0;
	dragging := 0;

endfunction

function FindTheWay()
	var targ := TargetCoordinates(owner);
	if(!targ)
		SendSysMessage(owner, "Invalido!");
		return;
	endif


	theway := FindPath(me.x, me.y, me.z, targ.x, targ.y, targ.z, me.realm, FP_IGNORE_DOORS , 50);
	if(theway.errortext)
		a("erro: " + theway.errortext);
	endif
	s("tam: " + len(theway));
	var i;
	for (i := 1; i <= len(theway); i := i + 1)
		while(CoordDistance(me.x, me.y, theway[i].x, theway[i].y) > 0)
			RunTowardLocation(theway[i].x, theway[i].y);
			sleepms(2);
		endwhile
	endfor
	theway := 0;
endfunction


function TakeItem(ev)
	var cfg := ReadConfigFile(":*:itemdesc");
	if ( cfg[(ev.item).objtype].script["eat"] )
		PlaySoundEffect(me, CInt(0x3b)+ RandomInt(3));
		DestroyItem(ev.item);
		PrintTextAbovePrivate(me,"*O animal parece feliz*", ev.source);
		SetObjProperty(me, "happiness", 100);
	elseif ( ev.item.objtype IN {2482, 3701} && !(me.graphic in pack_animals) )
		if ((EnumerateItemsInContainer(ev.item)).size() > 0)
			SendSysMessage(ev.source, "Voce precisa esvaziar a mochila antes de coloca-la na montaria.");
			return;
		endif
		if ( me.npctemplate == ":brainai:Horse3" )
			SetObjProperty(me, "beforepack", me.graphic);
			me.graphic := 291;
			DestroyItem(ev.item);
			PrintText(ev.source,"*prende uma mochila no cavalo*");
		elseif ( me.npctemplate == ":brainai:Llama" )
			SetObjProperty(me, "beforepack", me.graphic);
			me.graphic := 292;
			DestroyItem(ev.item);
			PrintText(ev.source,"*prende uma mochila na llama*");
		endif

		if(IsMountable(me.graphic))
			mount := 1;
		else
			mount := 0;
		endif
	else
		SendSysMessage(ev.source, "Nao pode dar esse item!");
	endif
endfunction


function UnTame()

	TS_LowerDuration(me, "summon", 10000, 1);

	PrintTextAbovePrivate(me, "*"+me.name+" pode viver livre denovo.*", me.master);

	me.SetMaster(0);

	var orig_script := GetObjProperty(me, "script");
	if ( !orig_script )
		PrintTextAbove(me, "*doesnt have an original script to use now that taming is done?!*");
		SysLog(me.name+" doesnt have an original script to use now that taming is done?!");
		orig_script := ":ai_brain:brain";
	elseif ( orig_script["tamed"] )
		PrintTextAbove(me, "*my original script was tamed.src ?!*");
		SysLog(me.name+" my original script was tamed.src ?!");
		orig_script := ":brainAI:brain";
	endif

	me.script := orig_script;


	SetName(me, GetObjProperty(me, "name"));

	EraseObjProperty(me, "owner");
	EraseObjProperty(me, "name");
	EraseObjproperty(me, "script");

	EraseObjProperty(me, "happiness");

	RestartScript(me);
endfunction

function Transfer(targ)

	if (GetObjProperty(me, "summoned") == 1)
		return;
	endif

	if ( !targ.acctname )
		return;
	endif

	Say("*"+me.name+" aceitou "+targ.name+" como seu novo dono*");
	SetObjProperty(me, "owner", targ.serial);
	me.SetMaster(targ);

	RestartScript(me);
endfunction

function AllCommand(ev_type, targ)
	var event := struct;
	event.+type := ev_type;
	event.+source := me;
	event.+targ := targ;

	foreach mobile in ListMobilesNearLocation(me.x, me.y, me.z, 10)
		if ( (mobile.master).serial == (me.master).serial )
			//If they have the same masters.
			SendEvent(mobile, event);
		endif
		sleepms(2);
	endforeach
endfunction

function GroupCommand(ev_type, targ)
	var event := struct;
	event.+type := ev_type;
	event.+source := me;
	event.+targ := targ;

	foreach mobile in ListMobilesNearLocation(me.x, me.y, me.z, 10)
		if ( (mobile.master).serial == (me.master).serial ) //If they have the same masters.
			if( GetObjProperty(me, "Group") == GetObjProperty(mobile, "Group") ) // mesmo grupo
				SendEvent(mobile, event);
			endif
		endif
		sleepms(2);
	endforeach
endfunction





/////////////////////////////////
//////// MSGS DE DEBUG //////////
/////////////////////////////////


function s(texto)
	PrintTextAbove(me, texto);
endfunction

function a(texto)
	SendSysMessage(owner, texto, _DEFAULT_TEXT_FONT, RandomInt(1000) + 1);
endfunction


function debuggg()
	a("----------------------------");
	a("");

	if(following)
		a("following: "+ following.name);
	else
		a("following: 0");
	endif

	if(dragging)
		a("dragging: " + dragging.name);
	else
		a("dragging: 0");
	endif

	if(going_to)
		a("going_to: " + going_to.name);
	else
		a("going_to: 0");
	endif

	if(guarding)
		a("guarding: "+ guarding.name);
	else
		a("guarding: 0");
	endif

	if(last_following)
		a("last_following: "+ last_following.name);
	else
		a("last_following: 0");
	endif

	if(running_from)
		a("running_from: "+ running_from.name);
	else
		a("running_from: 0");
	endif

	a("");
	a("----------------------------");
endfunction