/* $Id: npcdeath.src 916 2005-11-05 23:44:32Z austin $
 *
 * Purpose
 * This script allows side effects to be triggered as a result of NPC death, like unmounting
 * players off their dying mount, playing death sounds, etc. This script is common for all NPCs,
 * and is called for each.
 *
 */
use uo;
use os;
use util;
use cfgfile;
use storage;

include ":containers:merchantUtil";
include ":timedscripts:timedScripts";
include ":death:death";
include ":mounts:mounts";
include ":taming:taming";
include ":tn:questevent";
include ":attributes:vitals";
include ":combat:hitscripts";
include "include/say";
include "include/damage";

//include ":spawnnet:spawnnet";
//include ":spawnregion:spawn";

program core_npcDeath(params)
	var corpse := params[1];

	var lastHit := GetObjProperty(corpse, "lastHit"); 
	if (":combat:weaponHitScripts/generic" in lastHit.hitscript)
		var attacker := SystemFindObjectBySerial(lastHit.attacker);
		if (attacker != error)
			execonkill(attacker, corpse);
		endif
	endif

	if (cint(GetObjProperty(corpse, "soulstone")) == 1)
		CreateItemInContainer(corpse, "soulstone", 1);
	endif

	if (getObjProperty(corpse, "owner")) //se for tamed, atualiza a prop tamedpets do master
		var masterserial := getObjProperty(corpse, "owner");
		var master := SystemFindObjectBySerial(masterserial);
		if(!getobjproperty(corpse, "Necro"))
			GetNumPets(master);
		else
			var numbersummons := Cint(GetObjProperty(master, "NecroSummons"));
			SetObjProperty(master, "NecroSummons", (numbersummons - 1));
		endif			
	endif

	if (getObjProperty(corpse, "oldbodydominio"))
		var masterserial := getObjProperty(corpse, "oldbodydominio");
		var master := SystemFindObjectBySerial(masterserial);
		SetObjProperty(master, "oldbodymorto", 1);
		EraseObjProperty(master, "oldbodyserial");
	endif

		
	//nao existe mais		
	/*if (getobjProperty(corpse, "devoraralma"))
		var necroserial := getobjProperty(corpse, "devoraralma");
		var necro := SystemFindObjectBySerial(necroserial);
		var maxhp := Cint(getobjProperty(corpse, "maxhp"));
		var souls := Cint(getobjProperty(necro, "souls"));
		souls := souls + 1;
		SetobjProperty(necro, "souls", souls);
		var hprecupera := maxhp / 10;
		var hpnow := AP_GetVital(necro, "hits");
		var amount := hpnow + hprecupera;
		AP_SetVital(necro, "hits", amount);
		PlayMovingEffect( corpse, necro, 14202, 5, 0,  0 );
		PlaySoundEffect(necro, 383);
	endif*/

	foreach mob in (ListMobilesNearLocation(corpse.x, corpse.y, corpse.z, 5, corpse.realm))
		//printtextabove(corpse, "procurando mobs " + mob.name);
		if (cint(GetObjProperty(mob, "#satisfacaosadica")))
		//	printtextabove(corpse, "tem satisfacao " + cint(GetObjProperty(mob, "#satisfacaosadica")) + " " + readgameclock() );
			if (cint(GetObjProperty(mob, "#satisfacaosadica")) > readgameclock())
		//		printtextabove(corpse, "ta no time ");
		//		var souls := Cint(getobjProperty(mob, "souls"));
		//		souls := souls + 1;
		//		SetobjProperty(mob, "souls", souls);
				PlayMovingEffect( corpse, mob, 14202, 5, 1,  0 );
				PlaySoundEffect(mob, 383);
				HealFLS(mob, 5);
				recalcvitals(mob);
			endif
		endif
		
		if ( (GetObjProperty(mob, "#presenteespiritual") != error) )
			if (GetObjProperty(mob, "#presenteespiritual") > readgameclock())
				var souls := Cint(getobjProperty(mob, "souls"));
				souls := souls + 1;
				SetobjProperty(mob, "souls", souls);
				PlayMovingEffect( corpse, mob, 14202, 5, 1,  0 );
				PlaySoundEffect(mob, 383);
				HealMana(mob, 10);
				//var mymana := AP_GetVital(mob, MANA) + 10;
				//var maxmana := AP_GetVitalMaximumValue(mob, MANA);

				//if (mymana > maxmana)
				//	mymana := maxmana;
				//endif

				//AP_SetVital(mob, MANA, mymana);
			endif
		endif
	endforeach

	TS_Death(corpse); // Will still get the PID from the corpse.

	var corpse_name := corpse.desc;
	SetObjProperty(corpse, "originalname", corpse_name);
	corpse_name["A corpse of"] := "corpo de";
	SetName(corpse, corpse_name);
	
	var template := GetObjProperty(corpse, "npctemplate"); // Set by the core.
	var npc_cfg := NPC_GetNPCConfig(template);
	var death_script := npc_cfg.DeathScript;

	var speech := GetConfigStringArray( npc_cfg[template], "diespeech" );
	if (speech.size() > 0)
		if (RandomInt(100)  < 30) //sempre 30% de chance de falar
			printtextabove(corpse, speech[RandomInt(speech.size()+1)]);
		endif
	endif

	var spawnpoint := SystemFindObjectBySerial(GetObjProperty(corpse, "spawnpoint"));	
	//printtextabove(corpse, "spawnpoint " + spawnpoint);
	if (GetObjProperty(corpse, "spawnkill") == error)
	if (spawnpoint)
		if (GetObjProperty(spawnpoint, "unique") == 1)
			var boss := GetObjProperty(spawnpoint, "uniquestat");
			if (boss.deathevent)
				foreach nevent in (boss.deathevent)
				//	printtextabove(corpse, " " + nevent.type);
					if ( (nevent.type == "Criar Npcs") && (cint(nevent.x) == 6) && (cint(nevent.y) == 6) && (cint(nevent.z) == 6)  )
						nevent.x := corpse.x;
						nevent.y := corpse.y;
						nevent.z := corpse.z;
						//printtextabove(corpse, "mudei o evento");
					endif
					ExecuteEvent(nevent);				
				endforeach
			endif
		endif
	endif
	endif

	if (GetObjProperty(corpse, "spawnkill") == error)
		if ( death_script )
			params.Append(npc_cfg);
			var result := Start_Script("deathscripts/"+death_script, params);
			if ( result.errortext )
				PrintTextAbove(corpse, "Error::Death Script -"+result.errortext);
				SysLog("Error::Death Script Tmplt:["+template+"] Desc:["+corpse.desc+"] Ser:["+Hex(corpse.serial)+"] - "+result.errortext);
			endif
		endif
	endif

//	if (GetObjProperty(corpse, "spawnnet")) //se for spawnado pelo spawnet
//		SpawnNet_Clear(corpse);
//	elseif (GetObjProperty(corpse, "SpawnRegion") )//se for spawnado pelo regionspawn
//		SpawnRegionDeath(corpse);
//	endif		

	DP_PlayDeathSound(corpse);
	CPM_DeleteContainers(corpse);

	//printtextabove(corpse, " " + corpse);	

	if (corpse)
		var loot := NoLootCheck(corpse, npc_cfg);
		var corp := NoCorpseCheck(corpse, npc_cfg);

		if (!(corp || loot))
			MP_DeathUnmount(corpse);
		endif
	endif
endprogram

function NoLootCheck(corpse, npc_cfg)
	if ( GetObjProperty(corpse, "GuardKill") );
		// Nothing
	elseif ( GetObjProperty(corpse, "guardkill") ); 
		// Nothing - Old CProp
	elseif ( npc_cfg.NoLoot );
		// Nothing
	elseif ( GetObjProperty(corpse, "NoCorpse") );
		// Nothing
	elseif ( GetObjProperty(corpse, "nocorpse") );
		// Nothing - Old Cprop
	elseif ( GetObjProperty(corpse, "summoned") );
		// Nothing;
	else
		return 0;
	endif
	
	// No corpse. Don't drop backpack contents.
	//PrintTextAbove(corpse, "*guardkilling*");
	foreach item in (EnumerateItemsInContainer(corpse))
		if ( item.container == corpse )
			DestroyItem(item);
		endif
		sleepms(2);
	endforeach
	//printtextabove(corpse, "no loot check");
	//no loot  nao destroi o corpo, so NoCorpse
	//DestroyItem(corpse);
	
	return 1;
endfunction

function NoCorpseCheck(corpse, npc_cfg)
	if ( npc_cfg.NoCorpse );
		// Nothing
	elseif ( GetObjProperty(corpse, "NoCorpse") );
		// Nothing
	elseif ( GetObjProperty(corpse, "nocorpse") );
		// Nothing - Old Cprop
	elseif ( GetObjProperty(corpse, "summoned") );
		// Nothing;
	else
		return 0;
	endif
	
	// No corpse. Place backpack contents where the corpse is.
	//printtextabove(corpse, "no corpse");
	foreach item in (EnumerateItemsInContainer(corpse))
		//if ( item.container == corpse )
			var itm := MoveObjectToLocation(item, corpse.x, corpse.y, corpse.z, item.realm, MOVEOBJECT_FORCELOCATION);
			
		//endif
		//printtextabove(corpse, " " + item + " " + itm);
		sleepms(2);
	endforeach
	//printtextabove(corpse, "no corpse check");
	DestroyItem(corpse);
	
	return 1;
endfunction
