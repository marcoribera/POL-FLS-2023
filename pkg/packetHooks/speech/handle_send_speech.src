use uo;
use math;
use os;
include "include/say";
include ":charactercreation:habilidades";
program speech_hooks()
  Print( "Hooking Unicode Outgoing..." );
  return 1;
endprogram

const ITEM_ID := 3;
const TEXT_TYPE := 9;

exported function handleUCOutgoing( character, byref packet )

	//if (character.cmdlevel > 2)
	//	return 0;
	//endif

	var type := packet.GetInt8(TEXT_TYPE);

	var serial := packet.GetInt32(ITEM_ID);
	var source := SystemFindObjectBySerial(serial);

	var length_of_text := ( packet.GetInt16(1) - 49 ) / 2;
	var message_txt := packet.GetUnicodeString(48, length_of_text);

	if ( (getObjProperty(source, "metamorfose") != error) || (getObjProperty(source, "mudo") != error) || (getObjProperty(source, "#sleep") != error))
		if  (type != 0x02)
			return 1;
		endif
	endif

	if  (type == 0x0E)
		if (source.cmdlevel >= 1 && GetObjProperty(source, "LastMSG") != message_txt)
			SetObjProperty(source, "LastMSG", message_txt);
			foreach player in GetGlobalProperty("GmsOnlines")
				var sender := source.name;
				if (sender == "Desconhecido")
					sender := GetObjProperty(source, "realname");
				endif
				if (GetGlobalProperty("onlyuni"))
					SendSysMessageUNI(player, "[GMBcast]["+sender+"]: "+message_txt, 0x0063, 0x02);
				else
					SendSysMessage(player, "[GMBcast]["+sender+"]: "+message_txt, 0x03, 0x0063);
				endif

			endforeach
		endif
		return 1;
	endif

	var unvalid := { message_txt[1, 7], message_txt[1, 9], message_txt[1, 9], message_txt[1, 14], message_txt[1,13], message_txt[1,7] };
	if (source.acctname && GetObjProperty(source, "LastMSG") != message_txt && unvalid[1] != "*Tirou " && unvalid[2] != "*Guardou " && unvalid[3] != "*Colocou " && unvalid[4] != "*escalpelando " && unvalid[5] != "*Acrescentou " && unvalid[6] != "*Pegou " && message_txt != "*defende o golpe*" && message_txt != "*usando ataduras em si mesmo*" && message_txt != "*parou de aplicar bandagens*" && message_txt != "*arrombando a fechadura*" && message_txt != "*desarmando armadilha*" && message_txt != "*preparando um extrato*")
		foreach player in GetGlobalProperty("GmsOnlines")
			player := SystemFindObjectBySerial(Cint(player));
			if ( GetObjProperty(player, "SaySpyOn") && player.cmdlevel >= 3 && player != source)
				var sender := source.name;
				if (sender == "Desconhecido")
					sender := GetObjProperty(source, "realname");
				endif
				if (GetObjProperty(player, "SaySpyOn") == "on")
					if (GetGlobalProperty("onlyuni"))
						SendSysMessageUNI(player, "["+sender+"]: "+message_txt);
					else
						SendSysMessage(player, "["+sender+"]: "+message_txt);
					endif
				elseif(sender in GetObjProperty(player, "SaySpyOn"))
					if (GetGlobalProperty("onlyuni"))
						SendSysMessageUNI(player, "["+sender+"]: "+message_txt);
					else
						SendSysMessage(player, "["+sender+"]: "+message_txt);
					endif
				endif
			endif
			Sleepms(2);
		endforeach
		SetObjProperty(source, "LastMSG", message_txt);
	endif


	if( !CheckLineOfSight(source, character) )
		if(type == 0x09)
			return 0;
		elseif(temHabilidade(character,"mestre espiao"))
				return 0;
			else
				if (temHabilidade(character, "Espionar"))
					// Viadagem do kata removida
					if (Distance(character, source) < 12 && abs(character.z - source.z ) < 19) // A hab só serve pra ouvir até 8 tile e 19 z
						return 0;
					else
						return 1;
					endif
				else
					return 1;
				endif
		endif
	endif

	return 0;
endfunction

exported function handleUCOrequest( character, byref packet )

	var type := packet.GetInt8(4);

//	sendsysmessage(character, "type" + type);

	if (getObjProperty(character, "metamorfose") != error)
		if  ( type == 0x00)
			return 1;
		else
			return 0;
		endif
	endif

	return 0;
endfunction
