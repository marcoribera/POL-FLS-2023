/////////////////////////////////////////////////////////////////////
//
// Program Name: Gump_YesNo( params )
//
// Author:
//
// Date Created:
//
// Description: This program sends a "Yes/No" gump to the mobile
// with a message provided by the calling program. The Yes and
// No text is localized, meaning it is derived from a cliloc.
// This script MUST be called from another script using
// the Core Run_Script() function, as the parameters are
// passed in an array.
//
// Parameters:	Array containing:
// mobile::String		params[1] - The mobile to send the gump to
// prompt::String		params[2] - Prompt to display
// yes_text::String		params[3] - "Yes"
// no_text::String		params[4] - "No"
// delay::Integer		params[5] - Seconds before the gump
// 									closes. 0 keeps the gump
// 									open until the mobile responds
// Note: The Yes and No text, parameters 3 and 4 are irrelevant
// but must be included, at least until it is the code is changed
// because the actual Yes and No text are derived from a cliloc.
// Don't ask me. I did not write this script.
//
//
// Return Value: Integer, 1 for yes or 0 for no.
//
/////////////////////////////////////////////////////////////////////

use uo;
use os;

include ":gumps:gumps";

program Gump_YesNo( params )

	var mobile := params[1],
		prompt := params[2],
		yes_text := params[3],
		no_text := params[4],
		delay := params[5],
		yn_localized := params[6];

	SetObjProperty( mobile, "#CloseYesNoGumpPID", GetPid() );

	var yn_gump := GFCreateGump( 140, 100 );
	GFClosable( yn_gump, 0 );

	// GFResizePic( yn_gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 400, 205 );
	// GFResizePic( yn_gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 370, 175 );
	GFResizePic( yn_gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 440, 205 );
	GFResizePic( yn_gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 410, 175 );


	var y_pos := 20;
	foreach line in ( GFWordWrap( prompt, 420 ))
		GFTextLine( yn_gump, 30, y_pos, 1153, line );
		y_pos += 20;
		SleepMS(2);
	endforeach

	var x_pos := 30;
	GFAddButton( yn_gump, ( x_pos+3 ), 160, 4005, 4007, GF_CLOSE_BTN, 0xA1 );
	foreach line in ( GFWordWrap( yes_text, 355 ))
		line := line; // Avoid Compiler Warnings
		if(yn_localized)
			GFAddHTMLLocalized( yn_gump, ( x_pos + 40 ), 162, 160, 18, 1074976 );
		else
			GFTextLine(yn_gump, ( x_pos + 40 ), 162, 160, yes_text);
		endif
		x_pos += 30;
		SleepMS(2);
	endforeach

	x_pos := 140;
	GFAddButton( yn_gump, ( x_pos+3 ), 160, 4005, 4007, GF_CLOSE_BTN, 0xA2 );
	foreach line in ( GFWordWrap( no_text, 355 ))
		line := line; // Avoid Compiler Warnings
		if(yn_localized)
			GFAddHTMLLocalized(yn_gump, ( x_pos + 40 ), 162, 160, 18, 1074977 );
		else
			GFTextLine(yn_gump, ( x_pos + 40 ), 162, 160, no_text);
		endif
		x_pos += 20;
		SleepMS(2);
	endforeach

        if( delay )
                var close_gump := GetObjProperty( mobile, "#CloseYesNoGumpPID" );
                GFCloseGumpTimed( mobile, close_gump, CInt( delay ), 0 );
        endif

	var input := GFSendGump( mobile, yn_gump );
        if( input[0xA1] )
                return 1;
        endif

        return 0;
endprogram
