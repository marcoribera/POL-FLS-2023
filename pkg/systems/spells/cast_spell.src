
use uo;
use os;
use cfgfile;
use unicode;

include ":attributes:attributes";
include ":attributes:vitals";
include ":containers:containers";
include ":itemutils:itemdesc";
include "include/client";
include ":fls_magery:basicMagery";
include ":fls_magery:spells";
include "include/sounds";
include ":spells:tnmagery";
include "include/say";
include ":charactercreation:habilidades";
include ":spells:spellbooks";
include ":spells:swordmage";
include "include/facings";
include ":tn:cooldown";

//existem 2 tipos de spells. os que ficam no cfg e sao referenciados por um id
// e os que sao criados in game
// quando o spellstarter inicia, se for do tipo que tem id, ele le o cfg e escreve a struct spellinfo
// se for um spell criado ele ja tem o spellinfo ok;

program SpellStarter(params)

	var mobile := params[1]; // Caster
	var spellinfo := params[2]; // spellinfo
	var scroll := params[3]; // item que usou pra castar o spell (scroll, book, varinha ou nada)
	var targ := params[4];
	var sens := TemHabilidade(mobile, "Sensibilidade Profana");


	if (spellinfo.id != error) //le o cfg pra escrever a info
		writeSpellInfo(mobile, spellinfo);
	endif

	if ( GetObjProperty(mobile, "metamorfose") != error )
		if ( !TemHabilidade(mobile, "Treinamento Druidico"))
			SendSysMessageEx(mobile, "Voce nao pode usar magias metamorfoseado.");
			return 1;
		endif
	endif

	//se magia nao for de swordmage e tiver kit de swordmage, retorna.
	if ( (spellinfo.spelltype != "Swordmage") && (TemHabilidade(mobile, "Concentracao Aprimorada")))
		SendSysMessageEx(mobile, "Voce nao pode utilizar essas magias.", SSM_FAIL);
		return 1;
	endif

	if ( !Attach(mobile) )
		SendSysMessageEx(mobile, "Voce ja esta fazendo alguma coisa.", SSM_FAIL);
		return 0;
	endif

	// Already casting?
	if ( GetObjProperty(mobile, "#Casting") )
		SendSysMessageEx(mobile, "Voce nao pode invocar um encanto agora.", SSM_FAIL);
//		FailSpell(mobile);
		return 0;
	else
		if ( mobile.frozen )
			SendSysMessageEx(mobile, "Voce nao pode invocar um encanto paralisado.", SSM_FAIL);
			EraseObjProperty(mobile, "#Casting");
			return 0;
		else
			if(!TemHabilidade(mobile, "Meditacao em Combate"))
			mobile.frozen := 1;
			endif
		endif
	endif


	// Perform various checks to see if mobile can perform the spell
	spellinfo.mana := spellinfo.mana + Cint(spellinfo.mana*GetObjProperty(mobile, "#manapenalty")/100);
	if(sens)
		spellinfo.mana := 0;
	endif


	if (spellinfo.spelltype == "Swordmage")
		if (GetObjProperty(mobile, "raca") == "Humano")
			var chardata := GetObjProperty(mobile, "chardata");
			if (chardata.vantagemracial != "Conhecedor do Kitah")
				spellinfo.mana := spellinfo.mana + cint(spellinfo.mana*0.5);
			endif
		endif
	endif

	if (spellinfo.spelltype == "Mesum")
		if (GetObjProperty(mobile, "raca") == "Elfo")
			var chardata := GetObjProperty(mobile, "chardata");
			if (chardata.vantagemracial != "Conhecedor da Mesum")
				spellinfo.mana := spellinfo.mana + cint(spellinfo.mana*0.5);
			endif
		endif
	endif

	if ( mobile.squelched && !mobile.npctemplate )
		SendSysMessageEx(mobile, "Voce precisa falar devido os componentes verbais da magia.", SSM_FAIL);
		FailSpell(mobile);
		EraseObjProperty(mobile, "#Casting");
		return 0;
	elseif ( !EquipmentCheck(mobile) && !mobile.npctemplate )
		SendSysMessageEx(mobile, "Suas maos precisam estar livres para gesticular os componentes gestuais necessarios para a magia.", SSM_FAIL);
		mobile.frozen := 0;
		EraseObjProperty(mobile, "#medding");
		EraseObjProperty(mobile, "#Casting");
		return 0;
	elseif ( !AP_ConsumeVital(mobile, MANA, spellinfo.mana) && !mobile.npctemplate)
		if ( !TemHabilidade(mobile, "Determinacao Elemental"))
			SendSysMessageEx(mobile, "Voce nao possui energia arcana suficiente em seu corpo para invocar esta magia!", SSM_FAIL);
			FailSpell(mobile);
			EraseObjProperty(mobile, "#Casting");
			return 0;
		else
			if (  !isBloodied(mobile) )
				SendSysMessageEx(mobile, "Voce nao possui energia arcana suficiente em seu corpo para invocar esta magia!", SSM_FAIL);
				FailSpell(mobile);
				EraseObjProperty(mobile, "#Casting");
				return 0;
			endif
		endif
	elseif ( !TNCheckReagents(mobile, spellinfo, scroll) )
		//if (!Elementalista(mobile, spellinfo)) //elementalista nao gastam reagentes
		if ( !TemHabilidade(mobile, "Determinacao Elemental") && !isBloodied(mobile) )

			SendSysMessageEx(mobile, "Voce nao possui os componentes materiais necessarios para invocacao desta magia arcana.", SSM_FAIL);
			if (TemHabilidade(mobile, "Mago Precavido"))
				HealMana(mobile, cint(spellinfo.mana*0.5));
			endif
			FailSpell(mobile);
			EraseObjProperty(mobile, "#Casting");
			return 0;
		endif
    	else
		mobile.hidden := 0;
		//EraseObjProperty(mobile, "#Medding");
		if (!mobile.npctemplate)
			if (spellinfo.powerwords ) //checa powerwords
				if (GetObjProperty(mobile, "#magiasilenciosa") == error)
					PrintText(mobile, spellinfo.powerwords);
				endif
			endif
			if (spellinfo.prayer[1]) //Checa orações de clérigos
				if (GetObjProperty(mobile, "#magiasilenciosa") == error)
					if (RandomInt(100)  < 15) //15% de chance de falar
						var Prayers := spellinfo.prayer.size();
						Prayers := Prayers +1;
						Prayers := RandomIntMinMax(1,Prayers);
						var result := spellinfo.prayer[Prayers];
						result := StrReplace(result, "&atilde;", "ã"); result := StrReplace(result, "&Atilde;", "Ã"); result := StrReplace(result, "&eacute;", "é"); result := StrReplace(result, "&eacute;", "É"); result := StrReplace(result, "&ccedil;", "ç"); result := StrReplace(result, "&Ccedil;", "Ç"); result := StrReplace(result, "&ecirc;", "ê"); result := StrReplace(result, "&Ecirc;", "Ê"); result := StrReplace(result, "&otilde;", "õ"); result := StrReplace(result, "&Otilde;", "Õ"); result := StrReplace(result, "&ocirc;", "ô"); result := StrReplace(result, "&Ocirc;", "Ô");//Transforma Entitles em acentos. Necessário, não dá para pôr em função, pois o bug é o no "return";
						PrintText(mobile, result);
					endif
				endif
			endif
		endif

		SetObjProperty(mobile, "#Casting", 1); //Inserido aqui para tentar resolver o bug do "#Casting" que não sai
		var orig_hp := AP_GetVital(mobile, "Hits");
		var delay := spellinfo.delay + Cint(GetObjProperty(mobile, "#delayspell"));
		var moveCheck_script;
		if(!TemHabilidade(mobile, "Meditacao em Combate"))
			moveCheck_script := Start_Script(":fls_magery:moveCheck/moveCheck", array{mobile, Getpid()});
		endif

		var cycles := spellinfo.cycles;
		if (cycles < 1)
			cycles := 1;
		endif

		while(cycles)
			// If mobile is injured and does not have the protection spell on, fail the spell
			if ( (orig_hp > AP_GetVital(mobile, "Hits") &&  !TemHabilidade(mobile, "Concentracao Aprimorada")) )
				SendSysMessageEx(mobile, "Voce nao conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
				FailSpell(mobile);
				if (TemHabilidade(mobile, "Mago Precavido"))
					HealMana(mobile, cint(spellinfo.mana*0.5));
				endif
				PlaySoundEffect(mobile, SFX_SPELL_FAIL);
				PlayObjectCenteredEffect(mobile, GFX_FIZZLE, 5, 50);
				EraseObjProperty(mobile, "#Casting");
				EraseObjProperty(mobile, "#magiasilenciosa");
				return 0;
			endif

			// Check if we recieved an event from moveCheck_script, which means the mobile moved while targetting
			if ( Events_Waiting() )
				SendSysMessageEx(mobile, "Voce nao conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
				FailSpell(mobile);
				PlaySoundEffect(mobile, SFX_SPELL_FAIL);
				EraseObjProperty(mobile, "#Casting");
				EraseObjProperty(mobile, "#magiasilenciosa");
				if (TemHabilidade(mobile, "Mago Precavido"))
					HealMana(mobile, cint(spellinfo.mana*0.5));
				endif
				return 0;
			endif

			// Perform casting animation depending on spell target
			if (GetObjProperty(mobile, "#magiasilenciosa") == error)
			if (spellinfo.spelltype != "Swordmage")
				//printtextabove(mobile, " " + spellinfo.spelltype);
				case ( spellinfo.range )
					"Distancia":
						PerformAction(mobile, ANIM_CAST_DIR);
						break;
					"Area":
						PerformAction(mobile, ANIM_CAST_AREA);
						break;
					default:
						PerformAction(mobile, ANIM_CAST_DIR);
				endcase
			endif
			endif

			cycles := cycles - 1;
			sleepms(750);
		endwhile

		//sendsysmessage(mobile, "delay");


		while ( delay > 0 )
			// If mobile is injured and does not have the protection spell on, fail the spell
			if ( (orig_hp > AP_GetVital(mobile, "Hits") && (GetObjProperty(mobile, "kit") != "Mago de Combate") ) )
				SendSysMessageEx(mobile, "Voce nao conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
				FailSpell(mobile);
				PlaySoundEffect(mobile, SFX_SPELL_FAIL);
				PlayObjectCenteredEffect(mobile, GFX_FIZZLE, 5, 50);
				EraseObjProperty(mobile, "#Casting");
				if (TemHabilidade(mobile, "Mago Precavido"))
					HealMana(mobile, cint(spellinfo.mana*0.5));
				endif
				return 0;
			endif

			// Check if we recieved an event from moveCheck_script, which means the mobile moved while targetting
			if ( Events_Waiting() )
				SendSysMessageEx(mobile, "Voce nao conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
				FailSpell(mobile);
				PlaySoundEffect(mobile, SFX_SPELL_FAIL);
				EraseObjProperty(mobile, "#Casting");
				if (TemHabilidade(mobile, "Mago Precavido"))
					HealMana(mobile, cint(spellinfo.mana*0.5));
				endif
				return 0;
			endif

			if ( delay % 50 )
				SleepMS(delay % 50);
				delay := delay - (delay % 50);
			else
				SleepMS(50);
				delay := delay - 50;
			endif

		endwhile

		if (moveCheck_script)
			moveCheck_script.kill();
		endif

		var attribute;
		attribute := MAGERY;

		var difficulty := CInt(spellinfo.Difficulty);

		mobile.frozen := 0;
		if(TemHabilidade(mobile, "Sensibilidade Profana"))
		attribute := MECHANICALAPITUDE;
		endif

		var skill_check := SkillCheck(mobile, attribute, difficulty);

		// skill_check > 0 on success
		if ( skill_check > 0 )
			if (scroll.isA(POLCLASS_ITEM))
				if(!TemHabilidade(mobile, "Reaproveitar Pergaminho"))
					SubtractAmount(scroll, 1);
				else
					var chance := RandomIntMinMax(0,100);
					if (chance > attribute)
						SubtractAmount(scroll, 1);
					endif
				endif
			endif
			//escolhe o target
			if (!targ)
				//sendsysmessage(mobile, "spellinfo.alvo " + spellinfo.alvo);
				if (spellinfo.alvo == "Self")
					targ := mobile;
				elseif (spellinfo.alvo == "Unico")
					SendSysMessageEx(mobile, "Escolha o alvo da magia.", SSM_REQUEST);
					var noto := TGTOPT_NEUTRAL;
					if (spellinfo.align == "Harmful")
						noto := TGTOPT_HARMFUL;
					elseif (spellinfo.align == "HELPFUL")
						noto := TGTOPT_HELPFUL;
					endif
					targ := Target(mobile, noto );
                    var vont := GetResist(targ, VONTADE);
					if (GetCooldown(targ, "repeal") > 0)
						SendSysMessageEx(mobile, "O alvo esta invulneravel a magias.", SSM_FAIL);
						return 1;
					endif
                    if (GetCooldown(targ, "corpofechado") > 0) //Sentença de Hivytorn paladino
						SendSysMessageEx(mobile, "A magia nao funcionou no alvo, alem disso voce sente suas energias sendo esgotadas.", SSM_FAIL);
						DamageMANA(mobile, vont/3);
						return 1;
					endif
					TurnObjectToward(mobile, targ.x, targ.y);
				elseif (spellinfo.alvo == "Area")
					SendSysMessageEx(mobile, "Escolha o ponto onde a magia sera castada.", SSM_REQUEST);
					targ := TargetCoordinates(mobile);
					TurnObjectToward(mobile, targ.x, targ.y);
				endif


				if (!targ)
					SendsysMessageEx(mobile, "Voce cancelou a magia.", SSM_FAIL);
					FailSpell(mobile);
					return;
				endif
			else
				if (GetCooldown(targ, "repeal") > 0)
					return 1;
				endif
                if (GetCooldown(targ, "corpofechado") > 0)
					SendSysMessageEx(mobile, "A magia nao funcionou no alvo, alem disso voce sente suas energias sendo esgotadas.", SSM_FAIL);
					var vont := GetResist(targ, VONTADE);
					DamageMANA(mobile, vont/3);
					return 1;
				endif
			endif

//			if (!CheckLOSAt(mobile, targ.x, targ.y, targ.z))
			if (spellinfo.alvo != "Area") //checa se não é magia em área
				if (!CheckLineOfSight(mobile, targ)) //verifica se esta na LOS
					SendsysMessageEx(mobile, "Voce nao ve o alvo.", SSM_FAIL);
					FailSpell(mobile);
					return 1;
				endif
			else //senão
				if (!CheckLOSAt(mobile, targ.x, targ.y, targ.z)) //verifica se o ponto é vísivel
					SendsysMessageEx(mobile, "O ponto que voce selecionou esta fora da sua linha de visao.", SSM_FAIL);
					FailSpell(mobile);
					return 1;
				endif
			endif

			CastSpell(mobile, spellinfo, targ);
		else
			if (TemHabilidade(mobile, "Mago Precavido"))
				HealMana(mobile, cint(spellinfo.mana*0.5));
			endif

			PlaySoundEffect(mobile, SFX_SPELL_FAIL);
			SendSysMessageEX(mobile, "Voce falhou em invocar a magia.", SSM_FAIL);
		endif

	endif

	//MS_SpellDebug(mobile, "Spell starter completed.");
	EraseObjProperty(mobile, "#magiasilenciosa");
	EraseObjProperty(mobile, "#Casting");

	return 1;
endprogram
