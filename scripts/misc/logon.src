/*
 * $Id: logon.src 937 2005-11-07 01:20:20Z austin $
 *
 */

use uo;
use os;
use polsys;
include ":fls_core:fls_characters";
include "include/say";
include "include/client";
include ":taming:taming";
include ":fls_core:fls_characters";
include ":gumps:gumpPrompt";
include ":gumps:gumpPrompt";
include ":charactercreation:resists";

program Logon(who)

	//Inicializa exibir apenas nome da raca
	if(!who.npctemplate && !GetObjProperty(who, "nome_inicial"))
		if(who.name != who.title_race)
			if(who.name != "" && GetObjProperty(who, "chardata"))
				SetObjProperty(who, "nome_inicial", who.name);
				SetName(who, who.title_race);
			endif
		else
			SetName(who, who.title_race);
		endif
	endif

	EraseObjProperty(who, "#pegueiesse"); // evitar bugs no stealing.
	EraseObjProperty(who, "#torobando");
	SetObjProperty(who, "ConnectTime", polcore().systime);

	var createdat :=  getobjproperty(who, "createdate");
	var obitodat := FindAccount(who.acctname).getprop("mortelog");
	if (!obitodat)
		if (createdat == error)
		SetObjProperty(who, "createdate", polcore().systime);
		endif

	else
		if (createdat == error)
		SetObjProperty(who, "createdate", (polcore().systime));
		endif

	endif

	//checa se vai subir skill passiva
	if (CInt(FindAccount(who.acctname).getprop("nota")) == 4)

		var intervalo := 3600*5; // 0.1 a cada 5 horas

		var lastPrize := CInt(getobjproperty(who, "lastprize"));
		if (lastPrize == error)
			lastPrize := polcore().systime;
			SetObjProperty(who, "lastprize", lastPrize);
		endif

		var deltaTime := polcore().systime - lastPrize;
		var ticks := cint(deltaTime/intervalo);

		//print(who.acctname + " ticks " + ticks);
		SendSysMessage(who, "NotaRP 4: Calculando UP passivo...");
		if ( ticks >= 1 ) //da +0.1 a cada 5h
			var time := ticks * intervalo; // soma apenas o tempo que foi usado pra subir a skill

			var i := 0;

			var possiveis;
			var skills := GetObjProperty(who, "chardata").Skills;
			var temp;
			var chosen;
			for ( i := 0; i < ticks; i := i + 1)

				possiveis := array;

				foreach skill in (skills.keys())
					if (CanPassiveIncreaseSkill(who, skill))
						possiveis.append(skill);
					endif
					sleep(2);
				endforeach

				if(!possiveis)
					SetObjProperty(who, "lastprize", polcore().systime);
					SendSysMessage(who, who.name + " (" + who.acctname + ") nao tem como melhorar passivamente com o cap atual.");
					break;
				endif

				chosen := possiveis[ RandomInt(possiveis.size())+1 ];
				//LogToFile(":tn:passiva.log", who.name + " " + who.acctname + " ganhou 0.1 em " + chosen);
				SendSysMessage(who, who.name + " (" + who.acctname + ") ganhou 0.1 em " + chosen +" passivamente.");
				SetObjProperty(who, "skillpassiva", cint(GetObjProperty(who, "skillpassiva"))+1); //conta quantos ups teve
				//AP_SetTrueSkill(who, chosen,   (AP_GetTrueSkill(who, chosen)+0.1));

				//print("Chosen: "+AP_GetTrueSkill(who, chosen));
				temp := (AP_GetTrueSkill(who, chosen)+0.1);
				//print("Chosen+0.1: "+temp);

				///while ( CInt(temp*10.0) == CInt(GetAttributeBaseValue(who, chosen)) )
				//	temp := temp+0.1;
				//	sleepms(10);
				//endwhile

				AP_SetTrueSkill(who, chosen, temp);
				sleep(2);
			endfor

			SetObjProperty(who, "lastprize", lastPrize + time);
		else
			if(lastprize > polcore().systime)
				lastprize := polcore().systime;
			endif
			SetObjProperty(who, "lastprize", lastPrize);
			SendSysMessage(who, "NotaRP 4: Sem tempo suficiente para outro UP passivo.");
		endif
	else
		EraseObjProperty(who, "lastprize");
	endif

	if (HaveReverseVision(who))
		ReverseLight(who);
	endif

	var recorde := GetGlobalProperty("maxonline");
	if (!recorde)
		recorde := 0;
	endif

	var players := EnumerateOnlineCharacters();
	var total := players.size();
	if (total > recorde)
		BroadCast("Novo recorde do shard de players online batido! Total: " + total + "!", FONT_BOLD, SSM_INFO);
		SetGlobalPRoperty("maxonline", total);
	endif

	var acc := who.acct;
	var ips := acc.GetProp("IP");
	if ( !ips )
		ips := array;
		ips.Append(who.ip);
		acc.SetProp("IP", ips);
	elseif (CInt(ips.size()) > 0)
		if (who.ip in ips); // Do Nothing
		else
			ips.Append(who.ip);
			acc.SetProp("IP", ips);
		endif
	endif

	//TestClientInfo(who); Removido porque nun faz nada q preste
	IsGm(who);

	if  (cint(acc.getprop("novasenha")) != 1)
		GumpPrompt(who, "Por favor, altere a senha da sua conta com o comando .senha ");
	endif

	LogonPets(who);
	GetResist(who, FORTITUDE);
	GetResist(who, VONTADE);
	GetResist(who, REFLEXOS);
	return 1;
endprogram

Function IsGm(who)
	If (who.cmdlevel >= 1)
		var GmsOnlines := GetGlobalProperty("GmsOnlines");
		if (GmsOnlines)
			GmsOnlines.append(who.serial);
		else
			GmsOnlines := { who.serial };
		endif
		SetGlobalProperty("GmsOnlines", GmsOnlines);
	endif
endfunction

Function TestClientInfo(who)


	Var info:=who.clientinfo;


	LogToFile("log/ips.log", "ClientInfo "+who.name+"' ["+who.acctname+"]");
	LogToFile("log/ips.log", "IP: " +who.ip );



	If (info.unknown1)

		LogToFile("log/ips.log", "  Unknown1                 = "+Lower(Hex(info.unknown1)));

		LogToFile("log/ips.log", "  Unique Instance ID of UO = "+Lower(Hex(info.instance)));

		LogToFile("log/ips.log", "  OS Version               = "+info.os_major+"."+info.os_minor+"."+info.os_revision);

		LogToFile("log/ips.log", "  CPU Manufacturer         = "+info.cpu_manufacturer);

		LogToFile("log/ips.log", "  CPU Family               = "+info.cpu_family);

		LogToFile("log/ips.log", "  CPU Model                = "+info.cpu_model);

		LogToFile("log/ips.log", "  CPU Clock Speed          = "+info.cpu_clockspeed+" MHz");

		LogToFile("log/ips.log", "  CPU Quantity             = "+info.cpu_quantity);

		LogToFile("log/ips.log", "  Memory                   = "+info.memory+" MB");

		LogToFile("log/ips.log", "  Screen Resolution        = "+info.screen_width+" x "+info.screen_height+" x "+info.screen_depth+" Bit");

		LogToFile("log/ips.log", "  Direct X Version         = "+info.directx_major+"."+info.directx_minor);

		LogToFile("log/ips.log", "  Video Card Description   = "+CChrZ(info.video_description));

		LogToFile("log/ips.log", "  Video Card Vendor ID     = "+info.video_vendor);

		LogToFile("log/ips.log", "  Video Card Device ID     = "+info.video_device);

		LogToFile("log/ips.log", "  Video Card Memory        = "+info.video_memory+" MB");

		LogToFile("log/ips.log", "  Distribution             = "+info.distribution);

		LogToFile("log/ips.log", "  Clients Running          = "+info.clients_running);

		LogToFile("log/ips.log", "  Clients Installed        = "+info.clients_installed);

		LogToFile("log/ips.log", "  Partial Insstalled       = "+info.partial_installed);

		LogToFile("log/ips.log", "  Language Code            = "+CChrZ(info.langcode));

		LogToFile("log/ips.log", "  Unknown2                 = "+info.unknown2);

	Else

		LogToFile("log/ips.log", "No ClientInfo '"+who.name+"' ["+who.acctname+"]");

	EndIf

EndFunction

//Contribuição de Marcknight
function CanPassiveIncreaseSkill(who, skill)

	var bonus_tempo := 0;
	var true_skill := AP_GetTrueSkill(who, skill);
	if(GetObjProperty(who, "bonus_tempo"))
		bonus_tempo := bonus_tempo + 20;
	endif
	//verifica se ainda não alcancou o cap máximo permitido para aquela skill e se não atingiu o cap permitido por tempo de criação do personagem
	if( (true_skill < AP_CheckClassSkillCap(who, skill)) && (true_skill < (limiteportempo(who) + valorinicial(who, skill) + bonus_tempo)) )
		return 1;
	else
		return 0;
	endif
endfunction